function uppercase(text) {
  return text.toUpperCase();
}

function bigged(text) {
  return text
    .toLowerCase()
    .replace(/[^a-z0-9 ]/g, '')
    .split('')
    .map((char) => {
      switch (char) {
        case '0': return '0Ô∏è‚É£';
        case '1': return '1Ô∏è‚É£';
        case '2': return '2Ô∏è‚É£';
        case '3': return '3Ô∏è‚É£';
        case '4': return '4Ô∏è‚É£';
        case '5': return '5Ô∏è‚É£';
        case '6': return '6Ô∏è‚É£';
        case '7': return '7Ô∏è‚É£';
        case '8': return '8Ô∏è‚É£';
        case '9': return '9Ô∏è‚É£';
        case ' ': return '    ';
        default: return String.fromCodePoint(0xd83c, 0xdde6 + (char.charCodeAt(0) - 97));
      }
    })
    .join(' ');
}

function saturn(text) {
  mappings = {
    'a': '·ó©',
    'b': '·ó∑',
    'c': '·òì',
    'd': '·ó™',
    'e': '·ïÆ',
    'f': '·ñ¥',
    'g': '·ï§',
    'h': '·óÅ',
    'i': '·ìÆ',
    'j': '·íé',
    'k': '·îå',
    'l': '·í™',
    'm': '·ôè',
    'n': '·ëé',
    'o': '·òé',
    'p': '·ñò',
    'q': '·ï¥',
    'r': '·ñá',
    's': '·îï',
    't': '·íÆ',
    'u': '·òÆ',
    'v': '·êØ',
    'w': '·ôé',
    'x': '·ô≠',
    'y': '·ñø',
    'z': '·îì',
    "'": '·êû'
  }

  return text
    .toLowerCase()
    .split('')
    .map(c => mappings[c] || ' ')
    .join('');
}

function think(text) {
  return `( .   __ . ) . o O ( ${text} )`;
}

function mapRanges(ranges, c) {
  const code = c.charCodeAt(0);

  if (Array.isArray(ranges)) {
    for (let i = 0; i < ranges.length; i++) {
      const [min, max, offset] = ranges[i];
      if (code >= min && code <= max) {
        return String.fromCodePoint((code - min) + offset);
      }
    }
    return c;
  }

  const offsetCode = (code - 65) + offset;
  return String.fromCodePoint(offsetCode);
}

function unicodeConvert(ranges) {
  return (text) => {
    const chars = text.split('').map((c) => {
      if (!/[a-zA-Z]/.test(c)) {
        return c;
      }
      return mapRanges(ranges, c);
    });
    return chars.join(' ');
  };
}

const script = unicodeConvert([
  [65,  92,   0x1D4D0],
  [97,  124,  0x1D4EA],
]);
const jab = unicodeConvert([
  [32,  32,   0x3000],
  [65,  128,  0xFF21],
]);
const circles = unicodeConvert([
  [65,  92,   0x24B6],
  [97,  124,  0x24D0],
]);
const parens = unicodeConvert([
  [65,  92,   0x249C],
  [97,  124,  0x249C],
]);
const monospace = unicodeConvert([
  [65,  92,   0x1D670],
  [97,  124,  0x1D68A],
]);

function superscript(text) {
¬† const map = {"0":"‚Å∞","1":"¬π","2":"¬≤","3":"¬≥","4":"‚Å¥","5":"‚Åµ","6":"‚Å∂","7":"‚Å∑","8":"‚Å∏","9":"‚Åπ","a":"·µÉ","b":"·µá","c":"·∂ú","d":"·µà","e":"·µâ","f":"·∂†","g":"·µç","h":" ∞","i":"·∂¶","j":" ≤","k":"·µè","l":"À°","m":"·µê","n":"‚Åø","o":"·µí","p":"·µñ","q":"·ë´","r":" ≥","s":"À¢","t":"·µó","u":"·µò","v":"·µõ","w":" ∑","x":"À£","y":" ∏","z":"·∂ª","A":"·¥¨","B":"·¥Æ","C":"·∂ú","D":"·¥∞","E":"·¥±","F":"·∂†","G":"·¥≥","H":"·¥¥","I":"·¥µ","J":"·¥∂","K":"·¥∑","L":"·¥∏","M":"·¥π","N":"·¥∫","O":"·¥º","P":"·¥æ","Q":"Q","R":"·¥ø","S":"À¢","T":"·µÄ","U":"·µÅ","V":"‚±Ω","W":"·µÇ","X":"À£","Y":" ∏","Z":"·∂ª","+":"‚Å∫","-":"‚Åª","=":"‚Åº","(":"‚ÅΩ",")":"‚Åæ", "q":"·µ†", "Q":"·µ†", "?":"ÀÄ", "!":"·µé"};
¬† const charArray = text.split("");
¬† for (let i = 0; i < charArray.length; i++) {
¬† ¬† if (map[charArray[i].toLowerCase()]) {
¬† ¬† ¬† charArray[i] = map[charArray[i]];
¬† ¬† }
¬† }
¬† text = charArray.join("");
¬† return text;
}

function subscript(text) {
¬† const map = {"0":"‚ÇÄ","1":"‚ÇÅ","2":"‚ÇÇ","3":"‚ÇÉ","4":"‚ÇÑ","5":"‚ÇÖ","6":"‚ÇÜ","7":"‚Çá","8":"‚Çà","9":"‚Çâ","a":"‚Çê","b":"b","c":"c","d":"d","e":"‚Çë","f":"f","g":"g","h":"‚Çï","i":"·µ¢","j":"‚±º","k":"‚Çñ","l":"‚Çó","m":"‚Çò","n":"‚Çô","o":"‚Çí","p":"‚Çö","q":"q","r":"·µ£","s":"‚Çõ","t":"‚Çú","u":"·µ§","v":"·µ•","w":"w","x":"‚Çì","y":"y","z":"z","A":"‚Çê","B":"B","C":"C","D":"D","E":"‚Çë","F":"F","G":"G","H":"‚Çï","I":"·µ¢","J":"‚±º","K":"‚Çñ","L":"‚Çó","M":"‚Çò","N":"‚Çô","O":"‚Çí","P":"‚Çö","Q":"Q","R":"·µ£","S":"‚Çõ","T":"‚Çú","U":"·µ§","V":"·µ•","W":"W","X":"‚Çì","Y":"Y","Z":"Z","+":"‚Çä","-":"‚Çã","=":"‚Çå","(":"‚Çç",")":"‚Çé", "y":"·µß", "b":"·µ¶", "q":"·µ©", "z":"ùìè", "w":"ùìå", "c":"ùí∏", "d":"ùíπ", "f":"ùíª", "g":"ùì∞"};
¬† const charArray = text.split("");
¬† for(let i = 0; i < charArray.length; i++) {
¬† ¬† if (map[charArray[i].toLowerCase()]) {
¬† ¬† ¬† charArray[i] = map[charArray[i]];
¬† ¬† }
¬† }
¬† text = charArray.join("");
¬† return text;
}

commands = {
  uppercase,
  bigged,
  saturn,
  think,
  script,
  jab,
  circles,
  parens,
  monospace,
  superscript,
  subscript,
};
